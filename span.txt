#include <stdio.h>
#include <stdlib.h>

// Function to calculate the stock span for each day
void calculateSpan(int price[], int n) {
    // Stack to store indices of stock prices
    int *stack = (int *)malloc(n * sizeof(int));
    int top = -1;  // Stack is initially empty
    int *span = (int *)malloc(n * sizeof(int));

    for (int i = 0; i < n; i++) {
        // Calculate span for the current day
        while (top != -1 && price[stack[top]] <= price[i]) {
            top--;  // Pop the stack if the price is smaller or equal
        }

        // If stack is empty, the span is i + 1 (all days till today)
        if (top == -1) {
            span[i] = i + 1;
        } else {
            // Otherwise, span is the difference between current index and the index of previous higher price
            span[i] = i - stack[top];
        }

        // Push the current day index onto the stack
        stack[++top] = i;
    }

    // Print the stock spans for all days
    printf("Stock spans: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", span[i]);
    }
    printf("\n");

    // Free the allocated memory for stack and span array
    free(stack);
    free(span);
}

int main() {
    // Example input: array of stock prices for n days
    int price[] = {100, 80, 60, 70, 60, 75, 85};
    int n = sizeof(price) / sizeof(price[0]);

    // Calculate and print the stock spans
    calculateSpan(price, n);

    return 0;
}
